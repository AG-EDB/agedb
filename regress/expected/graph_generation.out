/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
LOAD 'age';
SET search_path = ag_catalog;
SELECT * FROM create_complete_graph('gp1',5,'edges','vertices');
NOTICE:  graph "gp1" has been created
NOTICE:  VLabel "vertices" has been created
NOTICE:  ELabel "edges" has been created
 create_complete_graph 
-----------------------
 
(1 row)

SELECT COUNT(*) FROM gp1."edges";
 count 
-------
    10
(1 row)

SELECT COUNT(*) FROM gp1."vertices";
 count 
-------
     5
(1 row)

SELECT * FROM cypher('gp1', $$MATCH (a)-[e]->(b) RETURN e$$) as (n agtype);
                                                             n                                                              
----------------------------------------------------------------------------------------------------------------------------
 {"id": 1125899906842625, "label": "edges", "end_id": 844424930131970, "start_id": 844424930131969, "properties": {}}::edge
 {"id": 1125899906842629, "label": "edges", "end_id": 844424930131971, "start_id": 844424930131970, "properties": {}}::edge
 {"id": 1125899906842626, "label": "edges", "end_id": 844424930131971, "start_id": 844424930131969, "properties": {}}::edge
 {"id": 1125899906842630, "label": "edges", "end_id": 844424930131972, "start_id": 844424930131970, "properties": {}}::edge
 {"id": 1125899906842627, "label": "edges", "end_id": 844424930131972, "start_id": 844424930131969, "properties": {}}::edge
 {"id": 1125899906842632, "label": "edges", "end_id": 844424930131972, "start_id": 844424930131971, "properties": {}}::edge
 {"id": 1125899906842631, "label": "edges", "end_id": 844424930131973, "start_id": 844424930131970, "properties": {}}::edge
 {"id": 1125899906842634, "label": "edges", "end_id": 844424930131973, "start_id": 844424930131972, "properties": {}}::edge
 {"id": 1125899906842633, "label": "edges", "end_id": 844424930131973, "start_id": 844424930131971, "properties": {}}::edge
 {"id": 1125899906842628, "label": "edges", "end_id": 844424930131973, "start_id": 844424930131969, "properties": {}}::edge
(10 rows)

SELECT * FROM create_complete_graph('gp1',5,'edges','vertices');
 create_complete_graph 
-----------------------
 
(1 row)

SELECT COUNT(*) FROM gp1."edges";
 count 
-------
    20
(1 row)

SELECT COUNT(*) FROM gp1."vertices";
 count 
-------
    10
(1 row)

SELECT * FROM create_complete_graph('gp2',5,'edges');
NOTICE:  graph "gp2" has been created
NOTICE:  ELabel "edges" has been created
 create_complete_graph 
-----------------------
 
(1 row)

SELECT * FROM create_complete_graph('gp3',5, NULL);
ERROR:  edge label can not be NULL
SELECT * FROM create_complete_graph('gp4',NULL,NULL);
ERROR:  number of nodes can not be NULL
SELECT * FROM create_complete_graph(NULL,NULL,NULL);
ERROR:  graph name can not be NULL
SELECT drop_graph('gp1', true);
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table gp1._ag_label_vertex
drop cascades to table gp1._ag_label_edge
drop cascades to table gp1.vertices
drop cascades to table gp1.edges
NOTICE:  graph "gp1" has been dropped
 drop_graph 
------------
 
(1 row)

SELECT drop_graph('gp2', true);
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table gp2._ag_label_vertex
drop cascades to table gp2._ag_label_edge
drop cascades to table gp2.edges
NOTICE:  graph "gp2" has been dropped
 drop_graph 
------------
 
(1 row)

-- Tests for the Barabasi-Albert graph generation.
SELECT age_create_barabasi_albert_graph('barabasi_albert_a', 10, 1, NULL, NULL, false);
NOTICE:  graph "barabasi_albert_a" has been created
 age_create_barabasi_albert_graph 
----------------------------------
 
(1 row)

SELECT age_create_barabasi_albert_graph('barabasi_albert_b', 10, 2, 'BARABASI_VERTEX', 'BARABASI_EDGE', true);
NOTICE:  graph "barabasi_albert_b" has been created
NOTICE:  VLabel "BARABASI_VERTEX" has been created
NOTICE:  ELabel "BARABASI_EDGE" has been created
 age_create_barabasi_albert_graph 
----------------------------------
 
(1 row)

SELECT age_create_barabasi_albert_graph('barabasi_albert_c', 20, 1, NULL, NULL, NULL);
NOTICE:  graph "barabasi_albert_c" has been created
 age_create_barabasi_albert_graph 
----------------------------------
 
(1 row)

-- Should return 10 vertices and 9 edges.
SELECT COUNT(*) FROM barabasi_albert_a._ag_label_vertex;
 count 
-------
    10
(1 row)

SELECT COUNT(*) FROM barabasi_albert_a._ag_label_edge;
 count 
-------
     9
(1 row)

-- Should return 10 vertices and 36 edges.
SELECT COUNT(*) FROM barabasi_albert_b."BARABASI_VERTEX";
 count 
-------
    10
(1 row)

SELECT COUNT(*) FROM barabasi_albert_b."BARABASI_EDGE";
 count 
-------
    36
(1 row)

-- Should return 20 vertices and 19 edges.
SELECT COUNT(*) FROM barabasi_albert_c._ag_label_vertex;
 count 
-------
    20
(1 row)

SELECT COUNT(*) FROM barabasi_albert_c._ag_label_edge;
 count 
-------
    19
(1 row)

-- Should throw errors.
SELECT age_create_barabasi_albert_graph(NULL, NULL, NULL, NULL, NULL, NULL);
ERROR:  Graph name cannot be NULL
SELECT age_create_barabasi_albert_graph('barabasi_albert_d', NULL, NULL, NULL, NULL, NULL);
NOTICE:  graph "barabasi_albert_d" has been created
ERROR:  Number of vertices cannot be NULL.
SELECT age_create_barabasi_albert_graph('barabasi_albert_e', 10, NULL, NULL, NULL, NULL);
NOTICE:  graph "barabasi_albert_e" has been created
ERROR:  Number of edges cannot be NULL.
-- Drop Barabasi-Albert Graphs
SELECT drop_graph('barabasi_albert_a', true);
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table barabasi_albert_a._ag_label_vertex
drop cascades to table barabasi_albert_a._ag_label_edge
NOTICE:  graph "barabasi_albert_a" has been dropped
 drop_graph 
------------
 
(1 row)

SELECT drop_graph('barabasi_albert_b', true);
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table barabasi_albert_b._ag_label_vertex
drop cascades to table barabasi_albert_b._ag_label_edge
drop cascades to table barabasi_albert_b."BARABASI_VERTEX"
drop cascades to table barabasi_albert_b."BARABASI_EDGE"
NOTICE:  graph "barabasi_albert_b" has been dropped
 drop_graph 
------------
 
(1 row)

SELECT drop_graph('barabasi_albert_c', true);
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to table barabasi_albert_c._ag_label_vertex
drop cascades to table barabasi_albert_c._ag_label_edge
NOTICE:  graph "barabasi_albert_c" has been dropped
 drop_graph 
------------
 
(1 row)

